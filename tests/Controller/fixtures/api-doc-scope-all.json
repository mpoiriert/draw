{
    "swagger": "2.0",
    "info": {
        "title": "test",
        "version": "1.0"
    },
    "paths": {
        "/api/connection-tokens": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Create a token base on the username/password of a user.",
                "description": "The token returned is a JWT token (https://jwt.io/).\nOnce you have a token you can pass it as a Authorization Bearer request header: (Authorization: Bearer **token**).\nIf you decode the token you can read the **exp** attribute and see until when it's valid. Before the expiration\nis reach you should call the POST /api/connection-tokens endpoint to get a new one.",
                "operationId": "drawUserBundleCreateConnectionToken",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Draw.Bundle.UserBundle.DTO.Credential"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created token",
                        "schema": {
                            "$ref": "#/definitions/Draw.Bundle.UserBundle.DTO.ConnectionToken"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "connection_token_create"
            }
        },
        "/api/connection-tokens/current": {
            "delete": {
                "tags": [
                    "Security"
                ],
                "operationId": "drawUserBundleDeleteConnectionToken",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nothing to be returned"
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "drawUserBundle_connection_clear"
            }
        },
        "/api/connection-tokens/refresh": {
            "post": {
                "tags": [
                    "Security"
                ],
                "operationId": "drawUserBundleRefreshConnectionToken",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The refreshed token",
                        "schema": {
                            "$ref": "#/definitions/Draw.Bundle.UserBundle.DTO.ConnectionToken"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "drawUserBundle_connection_token_refresh"
            }
        },
        "/api/me": {
            "get": {
                "operationId": "me",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The currently connected user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "me"
            }
        },
        "/api/me-simple": {
            "get": {
                "summary": "Get a simple representation of the currently connected user.",
                "operationId": "meSimple",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful.",
                        "schema": {
                            "$ref": "#/definitions/SimpleUser"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "meSimple"
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tags",
                    "Tag2s"
                ],
                "operationId": "tagList",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "boolean",
                        "name": "active",
                        "required": false,
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "amountPerPage",
                        "required": true,
                        "format": "int32",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageNumber",
                        "required": false,
                        "format": "int32",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_tags_list"
            },
            "post": {
                "tags": [
                    "Tags",
                    "Tag2s"
                ],
                "operationId": "tagCreate",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The newly created tag",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_tags_create"
            }
        },
        "/api/tags/activate-all": {
            "post": {
                "tags": [
                    "Tags",
                    "Tag2s"
                ],
                "operationId": "tagActivateAll",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty return value mean success"
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_tags_activateall"
            }
        },
        "/api/tags/{id}": {
            "get": {
                "tags": [
                    "Tags",
                    "Tag2s"
                ],
                "operationId": "tagGet",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The tag",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "tag_get"
            },
            "put": {
                "tags": [
                    "Tags",
                    "Tag2s"
                ],
                "operationId": "tagEdit",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update tag",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_tags_edit"
            },
            "delete": {
                "tags": [
                    "Tags",
                    "Tag2s"
                ],
                "operationId": "tagDelete",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response mean success"
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_tags_delete"
            }
        },
        "/api/users": {
            "get": {
                "summary": "Return a paginator list of users.",
                "operationId": "userList",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_users_list"
            },
            "post": {
                "operationId": "userCreate",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_users_create"
            }
        },
        "/api/users/{id}": {
            "get": {
                "operationId": "userGet",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is successful.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "user_get"
            },
            "put": {
                "operationId": "userEdit",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "description": "The user id to edit",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_users_edit"
            },
            "delete": {
                "operationId": "userDelete",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "When the operation succeed, not content is returned."
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "user_delete"
            }
        },
        "/api/users/{id}/reset-password-email": {
            "post": {
                "summary": "Send a reset password email to the user.",
                "operationId": "userSendResetPasswordEmail",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No return value mean email has been sent"
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_users_sendresetpasswordemail"
            }
        },
        "/api/users/{id}/tags": {
            "put": {
                "operationId": "userSetTags",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The new list of tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "app_api_users_settags"
            }
        },
        "/tests": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "createTest",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "name": "param1",
                        "description": "param1 description",
                        "required": false,
                        "in": "query"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Draw.Component.OpenApi.Tests.Mock.Model.Test"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The created test entity",
                        "schema": {
                            "$ref": "#/definitions/Draw.Component.OpenApi.Tests.Mock.Model.Test"
                        },
                        "headers": {
                            "X-Draw": {
                                "description": "Description of the header",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "draw_component_openapi_tests_mock_test_create",
                "x-test": {
                    "key": "value",
                    "object": {
                        "property": "value"
                    }
                }
            }
        },
        "/tests-array": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "arrayTest",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    },
                    {
                        "type": "array",
                        "name": "param1",
                        "description": "The parameter",
                        "required": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The query parameter value",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "draw_component_openapi_tests_mock_test_array"
            }
        },
        "/v2/void": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "version2",
                "parameters": [
                    {
                        "type": "string",
                        "name": "X-Draw-Language",
                        "default": "en",
                        "in": "header"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Nothing"
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "draw_component_openapi_tests_mock_test_version2"
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "Draw.Bundle.UserBundle.DTO.ConnectionToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "Draw.Bundle.UserBundle.DTO.Credential": {
            "required": [
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "password": {
                    "format": "not empty",
                    "type": "string"
                },
                "username": {
                    "format": "not empty",
                    "type": "string"
                }
            }
        },
        "Draw.Component.OpenApi.Tests.Mock.Model.Test": {
            "type": "object",
            "properties": {
                "property": {
                    "description": "Property description.",
                    "type": "string"
                },
                "propertyFromBody": {
                    "description": "Property deserialize from body in test.",
                    "type": "string"
                }
            }
        },
        "Draw.OpenApi.Error.Validation": {
            "required": [
                "code"
            ],
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errors": {
                    "type": "object",
                    "properties": {
                        "propertyPath": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "code": {
                            "type": "string"
                        },
                        "payload": {
                            "type": "object"
                        }
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "SimpleUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "needChangePassword": {
                    "type": "boolean"
                }
            }
        },
        "Tag": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "label": {
                    "maxLength": 255,
                    "minLength": 3,
                    "type": "string"
                },
                "virtualProperty": {
                    "type": "string",
                    "readOnly": true
                },
                "virtualPropertyArray": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "readOnly": true
                }
            }
        },
        "User": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "comment": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "format": "date-time",
                    "description": "User date of birth.",
                    "type": "string"
                },
                "email": {
                    "format": "not empty",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "passwordUpdatedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "plainPassword": {
                    "description": "The plain password to update the password itself.",
                    "type": "string"
                },
                "requiredReadOnly": {
                    "type": "string",
                    "readOnly": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "userAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserAddress"
                    }
                }
            }
        },
        "UserAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "position": {
                    "format": "int32",
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        }
    }
}