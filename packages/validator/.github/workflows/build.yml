name: PHP

on:
  push:
  release:
    types:
      - created

jobs:
  automation_test_lowest:
    name: Automation Test [Lowest]
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'mysql://root@127.0.0.1:3306/draw'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
          tools: composer
          coverage: none
          extensions: mongodb-1.7.4
          ini-values: memory_limit=4G
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-v3-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Build
        run: |

          echo "::group::Install"
          composer update --optimize-autoloader --no-interaction --prefer-dist --prefer-lowest
          echo "::endgroup::"

          echo "::group::Script"
          CI=1 vendor/bin/phpunit --testdox -v
          echo "::endgroup::"

  automation_test_highest:
    name: Automation Test [Highest]
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'mysql://root@127.0.0.1:3306/draw'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
          tools: composer
          coverage: none
          extensions: mongodb-1.7.4
          ini-values: memory_limit=4G
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-v3-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Build
        run: |

          echo "::group::Install"
          composer update --optimize-autoloader --no-interaction --prefer-dist
          echo "::endgroup::"

          echo "::group::Script"
          CI=1 vendor/bin/phpunit --testdox -v
          echo "::endgroup::"
