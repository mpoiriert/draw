{
    "swagger": "2.0",
    "info": {
        "title": "test",
        "version": "1.0"
    },
    "paths": {
        "/tests": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "createTest",
                "parameters": [
                    {
                        "type": "string",
                        "name": "param1",
                        "description": "param1 description",
                        "in": "query"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The created test entity",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        },
                        "headers": {
                            "X-Draw": {
                                "description": "Description of the header",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "draw_openapi_tests_mock_test_create",
                "x-test": {
                    "key": "value",
                    "object": {
                        "property": "value"
                    }
                }
            }
        },
        "/tests-array": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "arrayTest",
                "parameters": [
                    {
                        "type": "array",
                        "name": "param1",
                        "description": "The parameter",
                        "required": true,
                        "collectionFormat": "csv",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The query parameter value",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "draw_openapi_tests_mock_test_array"
            }
        },
        "/v2/void": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "version2",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Nothing"
                    },
                    "400": {
                        "description": "Request Validation error",
                        "schema": {
                            "$ref": "#/definitions/Draw.OpenApi.Error.Validation"
                        }
                    }
                },
                "x-draw-open-api-symfony-route": "draw_openapi_tests_mock_test_version2"
            }
        }
    },
    "definitions": {
        "Test": {
            "type": "object",
            "properties": {
                "property": {
                    "description": "Property description.",
                    "type": "string"
                },
                "property_from_body": {
                    "description": "Property deserialize from body in test.",
                    "type": "string"
                }
            }
        },
        "Draw.OpenApi.Error.Validation": {
            "required": [
                "code"
            ],
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "object",
                    "properties": {
                        "propertyPath": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "invalidValue": {
                            "type": "mixed"
                        },
                        "code": {
                            "type": "string"
                        },
                        "payload": {
                            "type": "mixed"
                        }
                    }
                }
            }
        }
    }
}