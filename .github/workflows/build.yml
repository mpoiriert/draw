---
# https://docs.github.com/en/actions/reference/environment-variables#about-environment-variables
# https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
# https://github.com/marketplace/actions/checkout
# https://github.com/marketplace/actions/webfactory-ssh-agent
# https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
# https://github.com/marketplace/actions/setup-php-action
# https://github.com/marketplace/actions/actions-setup-mysql
# https://github.com/marketplace/actions/actions-setup-redis
# https://github.com/marketplace/actions/mongodb-in-github-actions
# https://github.com/marketplace/actions/cache

name: PHP

on:
  push:
  release:
    types:
      - created

env:
  APP_ENV: test

jobs:
  automation_test:
    name: Automation Test
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: "mongo:5.0.0"
        ports:
          - "27017:27017"
        options: |
          --health-cmd "mongo --eval 'db.runCommand({ connectionStatus: 1 })'"

    env:
      DATABASE_URL: 'mysql://root@127.0.0.1:3306/draw'
      MONGODB_URL: 'mongodb://127.0.0.1'
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer
          coverage: none
          ini-values: memory_limit=4G
      - name: Setup MySQL
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: 8.0
          distribution: mysql
          auto-start: true
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "${GITHUB_OUTPUT}"
      - name: Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-v3-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Build
        run: |

          echo "::group::Install"
          composer install --optimize-autoloader --no-interaction --prefer-dist
          bin/console assets:install ./public --no-interaction
          echo "::endgroup::"

          echo "::group::Script"
          composer test:reset
          vendor/bin/phpunit --no-coverage
          echo "::endgroup::"
